stages:
  - build

.build_staging:
  stage: build
  image: node:19-alpine3.16
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - node_modules/
    policy: pull
  variables:
    GIT_STRATEGY: fetch
  before_script:
    - apk update && apk add openssh-client bash rsync yarn
    - apk --no-cache --virtual build-dependencies add python3 make g++
    - eval $(ssh-agent -s)
    - bash -c 'ssh-add <(echo "$SSH_PRIVATE_KEY")'
    - mkdir -p ~/.ssh
    - ssh-keyscan -H $SSH_SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - rm -f .env
    - cp .env.$CI_ENVIRONMENT_NAME.example .env
    - yarn
    - yarn build

    - ssh -T $SSH_USER@$SSH_SERVER_IP "pwd; cd $REMOTE_PROJECT_DIR; git pull;"

    - rsync -a -e 'ssh' node_modules/ $SSH_USER@$SSH_SERVER_IP:$REMOTE_PROJECT_DIR/node_modules
    - rsync -a -e 'ssh' .env $SSH_USER@$SSH_SERVER_IP:$REMOTE_PROJECT_DIR/.env
    - rsync -a -e 'ssh' .next/ $SSH_USER@$SSH_SERVER_IP:$REMOTE_PROJECT_DIR/.next

    - ssh -T $SSH_USER@$SSH_SERVER_IP "pwd; source ~/.nvm/nvm.sh; pm2 restart clout-frontend;"

.build_develop:
  stage: build
  image:
    name: alpine:latest
  before_script:
    - apk update && apk add openssh-client bash rsync yarn sshpass
    - apk --no-cache --virtual build-dependencies add python3 make g++
    - eval $(ssh-agent -s)
    # - bash -c 'ssh-add <(echo "$SSH_PRIVATE_KEY")'
    - mkdir -p ~/.ssh
    - ssh-keyscan -H $SSH_SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - sshpass -p $SSH_PASSWORD ssh -T $SSH_USER@$SSH_SERVER_IP "pwd; cd $REMOTE_PROJECT_DIR; git pull; cp .env.$CI_ENVIRONMENT_NAME.example .env; docker compose build; docker compose up -d; docker system prune -f"
  tags:
    - local_sv

build_staging:
  extends: .build_staging
  only:
    refs:
      - staging
  environment:
    name: staging
    url: https://staging.clout-fi.com/

build_develop:
  extends: .build_develop
  only:
    refs:
      - develop
  environment:
    name: develop
    url: https://test.clout.k.lisod.vn/
